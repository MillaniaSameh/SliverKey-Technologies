@page "/"

@inject HttpClient Http
@inject NavigationManager NavigationManager

@using System.ComponentModel.DataAnnotations


<PageTitle>Login</PageTitle>

<div class="card mb-3 login-form">
    <div class="card-body">
        <EditForm Model="@LoginInput" OnSubmit="FormSubmit">

            <div class="mb-3">
                <label for="usernameInput" class="form-label">Username</label>
                <InputText id="usernameInput" class="form-control" @bind-Value="LoginInput.Username" />
                <ValidationMessage For="@(() => LoginInput.Username)" />
            </div>

            <div class="mb-3">
                <label for="passwordInput" class="form-label">Password</label>
                <InputText id="passwordInput" class="form-control" @bind-Value="LoginInput.Password" type="password" />
                <ValidationMessage For="@(() => LoginInput.Password)" />
            </div>
            
            <div class="text-danger error-msg">@ErrorMessage</div>
            <button type="submit" class="btn btn-primary">Login</button>

        </EditForm>
    </div>
</div>


@code {
    private LoginInputModel LoginInput = new();
    private string ErrorMessage { get; set; } = "";

    private async Task FormSubmit()
    {
        var content = new FormUrlEncodedContent(new Dictionary<string, string>
        {
            { "username", LoginInput.Username },
            { "password", LoginInput.Password }
        });

        var response = await Http.PostAsync("http://localhost:5038/api/login", content);
        @* var response = await Http.GetAsync("http://localhost:5038/"); *@

        Console.WriteLine($"--------------------- {response}");


        if (response.IsSuccessStatusCode)
        {
            // Handle success
            Console.WriteLine("--------------------- Success");
        }
        else
        {
            // Handle error
            Console.WriteLine("--------------------- Nope");
        }
    }

    private class LoginInputModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = "";
    }
}